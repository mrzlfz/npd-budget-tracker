/**
 * This file is auto-generated by Convex.
 * To reenerate, run:
 *   npx convex dev
 */

import type {
  DataModelFromSchema,
  Validator,
  FunctionReference,
  TableNamesInDataModel,
  IndexNames,
  SystemQueries,
  GenericDataModel,
  GenericDocument,
  GenericTableInfo,
  GenericCtx,
  Ent,
  GenericQuery,
  GenericAction,
  GenericMutation,
  } from "convex/server";
import type { api } from "./api";
import schema from "../schema";

export type { DataModel } from "convex/server";

const generic = {
  query: (customFn) => (customFn as GenericQuery<"Query">),
  mutation: (customFn) => (customFn as GenericMutation<"Mutation">),
  action: (customFn) => (customFn as GenericAction<"Action">),
} as const;

// Built-in queries run on the server.
export const query = {
  // Counters
  _genesis: generic.query(({ count }) => ({
    args: {},
    handler: () => ({ count: 0 }),
  })),
  // Storage
  _storage: generic.query(({ store }) => ({
    args: {},
    handler: () => ({}),
  })),
} as const satisfies SystemQueries;

export default api;